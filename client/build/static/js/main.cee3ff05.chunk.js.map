{"version":3,"sources":["components/Common/Input.jsx","components/Common/Button.jsx","components/Common/Form.jsx","redux/actions.js","components/Common/ToggleSwitch.jsx","components/Common/VerificationCode.jsx","pages/Login.jsx","pages/Register.jsx","components/Common/Avatar.jsx","components/Lists/ListItem.jsx","components/Lists/ListNotification.jsx","components/Lists/Search.jsx","components/Lists/GroupSelect.jsx","components/Lists/GroupChat.jsx","components/Lists/ListContainer.jsx","components/Common/FileUpload.jsx","components/Emoji/Emojis.jsx","components/Emoji/EmojiContainer.jsx","components/Messages/ChatInput.jsx","components/Messages/Image.jsx","components/Messages/Message.jsx","components/Messages/ChatTitle.jsx","components/Messages/ImageViewer.jsx","components/Messages/MessagesContainer.jsx","components/Navbar.jsx","components/Settings.jsx","components/Circles/CircleAdd.jsx","components/Circles/Circle.jsx","components/Circles/CircleContainer.jsx","components/Snackbar/Snackbar.jsx","components/Snackbar/SnackbarContainer.jsx","components/AccountPopup.jsx","pages/Home.jsx","hooks/index.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["StyledInput","styled","input","props","error","StyledLabel","label","selected","Wrapper","div","Input","type","name","value","onChange","onBlur","onFocus","useState","set","StyledButton","button","theme","buttonText","buttonBorder","buttonBackground","transition","Button","children","onClick","disabled","StyledForm","form","Error","p","Form","title","onSubmit","e","preventDefault","login","payload","setActiveChat","ToggleLabel","state","ToggleSpan","span","ToggleSwitch","Basic","setVerification","handleClick","useCallback","captcha","console","log","charNum","Page","SingleLine","CheckLabel","Login","username","touched","password","input_verification","rememberMe","setError","verification","dispatch","useDispatch","handleBlur","handleChange","val","errors","trim","handleSubmit","a","fetch","method","headers","credentials","body","JSON","stringify","remember","resp","status","json","target","autocomplete","Object","keys","some","x","to","Success","withTheme","history","userNickname","passwordConfirm","firstname","lastname","email","success","setSuccess","setTimeout","push","AvatarWrapper","AvatarImg","size","image","Activity","active","Avatar","className","displayStatus","alt","elemBackgroundHover","backgroundColor","Column","Name","LastMessage","LastMessageTime","chatActive","onContextMenu","avatar","userActive","message","timestamp","Date","toLocaleTimeString","slice","NotificationText","margin","ButtonRow","ListNotification","id","sender","socket","handleDelete","emit","nonActionable","actionable","inputBackground","SearchInput","search","placeholder","BackgroundShadow","Modal","background","ButtonWrapper","Row","justify","Scrollable","CreateButton","SelectWindow","setActiveList","resetButton","user","ScrollRef","useRef","friends","useSelector","rootReducer","local","map","single","index","stateinit","setState","ref","d","ListItem","key","newstate","find","handleUserSelected","usernames","CreateGroup","newGroup","setnewGroup","border","open","Scroll","CircleButton","FaPlusCircle","ItemWrapper","SectionTitle","backgroundText","elemBackground","Lists","activeList","setSearch","activeChat","notifications","chats","filter","recipient","includes","accounts","disp","dispTitle","Search","chat_name","recipientId","last_message","last_message_timestamp","check","handleNewChat","Label","FileUpload","file","text","uid","htmlFor","currentTarget","files","length","split","emojis","right","top","Emoji","EmojiContainer","foregroundColor","ImageBtn","EmojiBtn","FaSmile","ChatInput","activeChatId","emojiSelector","handleFile","extension","chat","err","handleFocusBlur","innerText","useEffect","current","contentEditable","onKeyDown","shiftKey","cancelBubble","stopPropagation","suppressContentEditableWarning","rect","getBoundingClientRect","width","height","icon","Img","img","Image","src","onError","onLoad","MessageContent","borderRadius","messageBackground","Message","received","TitleWrapper","TitleCotent","ChatTitle","active_state","Shadow","ImageViewer","callback","Messages","imageViewer","scrollTop","scrollHeight","messages","IconWrapper","IconNotice","Contacts","FaUserCircle","Circles","AiFillCompass","Chats","AiFillMessage","Add","IoMdPersonAdd","Notifications","FaBell","Settings","FaCog","NightMode","FaMoon","nightModeBtn","ListOptions","AppOptions","StyledAvatar","Navbar","setPos","setNightModeState","nightModeState","has_notifications","temp","item","dismissed","display","Title","h1","Option","Description","visible_in_searches","update","InputWrapper","CircleAdd","inputText","SetInput","onchange","userId","circle","CreaterWrapper","Creater","Time","CircleContent","Iconmore","CgMoreR","Iconlike","AiOutlineLike","Iconcomment","BiCommentDetail","Optional","BottomDiv","Circle","creater","time","clickOrnot","setclickOrnot","CircleShow","newCircle","setNewcircle","circles","create_at","bgColor","DismissBtn","CloseBtn","IoIosClose","Snackbar","uuid","dismiss","SnackbarContainer","UserNickname","AccountPopup","logoutFunc","Home","listState","setListState","accountOverview","setAccountViewChange","handleListChange","useSocket","loggedIn","io","connect","on","loadChats","loadFriends","loadCircles","loadUsers","loadNotifications","loadMessages","addMessageToChat","addCircle","addFriend","addChat","addNotification","dismissNotification","deleteNotification","setFriendOnline","setFriendOffline","updateAccount","close","GlobalStyle","createGlobalStyle","App","auth","ui","mode","circleBackground","exact","path","component","Register","render","initialState","notificationsReducer","action","j","findIndex","i","k","friendsReducer","chatsReducer","chatId","circlesReducer","activeChatReducer","combineReducers","persistConfig","storage","storageSession","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cee3ff05.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  border-radius: 6px;\r\n  border: ${props =>\r\n    props.error\r\n      ? \"1px solid rgba(213, 0, 0, 1)\"\r\n      : \"1px solid rgba(0, 0, 0, 0.2)\"};\r\n  padding: 0.75em;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  margin: 0.5em 0;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.875em;\r\n  color: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  transform: translatex(0.75em);\r\n  transform: ${props => props.selected && \"translatey(-65%)\"};\r\n  font-size: ${props => props.selected && \".7em\"};\r\n  color: ${props => props.selected && \"rgba(0, 0, 0, .6)\"};\r\n  align-items: center;\r\n  display: flex;\r\n  pointer-events: none;\r\n  transition: 0.5s ease;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  flex-grow: 1;\r\n  margin: 0.75em 0;\r\n`;\r\n\r\nconst Input = ({\r\n  label,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  error,\r\n  onBlur,\r\n  onFocus\r\n}) => {\r\n  const [selected, set] = useState(false);\r\n  const handleBlur = () => {\r\n    value === \"\" && set(!selected);\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    value === \"\" && set(!selected);\r\n    onFocus && onFocus();\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <StyledLabel selected={selected}>{label}</StyledLabel>\r\n      <StyledInput\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={handleBlur}\r\n        onFocus={handleFocus}\r\n        error={error}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n// input paramter  输入外框的注释label,输入框类型type,输入框变量name,输入框变量值value,当输入框中内容改变时onChange,error,当不聚焦时函数onBlur,当聚焦时函数onFocus\r\n// 返回\r\n// <div Wrapper>\r\n//       <label StyledLabel>\r\n//       <input StyledInput>\r\n// </div Wrapper>","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  margin-top: 1em;\r\n  padding: 0.5em;\r\n  justify-content: center;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600;\r\n  color: ${props => props.theme.buttonText || \"rgb(245,245,245)\"};\r\n  font-size: 1em;\r\n  border-radius: 6px;\r\n  border: ${props => props.theme.buttonBorder || \"none\"};\r\n  background-color: ${props =>\r\n    props.theme.buttonBackground || \"rgb(31, 31, 31)\"};\r\n  outline: none;\r\n  transition: ${props => props.theme.transition};\r\n  &:hover {\r\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n      0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  }\r\n  &:active {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, onClick, disabled }) => (\r\n  <StyledButton disabled={disabled} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\nexport default Button;\r\n\r\n// button paramter 子节点children,点击函数onclick,能不能点？disabled\r\n// 返回\r\n// <button StyledButton>\r\n//   children\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  border-radius: 6px;\r\n  padding: 2em 2em 2em 2em;\r\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12),\r\n    0 1px 3px 0 rgba(0, 0, 0, 0.2);\r\n  max-width: 500px;\r\n  & > h1 {\r\n    font-family: \"Open Sans\", sans-serif;\r\n    font-weight: 700;\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n  @media (max-width: 576px) {\r\n    border: none;\r\n    box-shadow: none;\r\n    min-width: 100%;\r\n  }\r\n`;\r\n\r\nconst Error = styled.p`\r\n  text-align: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.875em;\r\n  color: rgba(213, 0, 0, 1);\r\n`;\r\n\r\nconst Form = ({ title, error, children, onSubmit }) => (\r\n  <StyledForm\r\n    onSubmit={e => {\r\n      e.preventDefault();\r\n      onSubmit(e);\r\n    }}\r\n  >\r\n    {title && <h1>{title}</h1>}\r\n    {error && <Error>{error}</Error>}\r\n    {children}\r\n  </StyledForm>\r\n);\r\n\r\nexport default Form;\r\n","// basic action when connected\r\nexport const LOAD_NOTIFICATIONS = \"LOAD_NOTIFICATIONS\";\r\nexport const LOAD_FRIENDS = \"LOAD_FRIENDS\";\r\nexport const LOAD_CHATS = \"LOAD_CHATS\";\r\nexport const LOAD_USERS = \"LOAD_USERS\";\r\nexport const LOAD_CIRCLES = \"LOAD_CIRCLES\";\r\n\r\n// user state relevant\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n// friend user relevant\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\nexport const DELETE_FRIEND = \"DELETE_FRIEND\";\r\nexport const SET_FRIEND_ONLINE = \"SET_FRIEND_ONLINE\";\r\nexport const SET_FRIEND_OFFLINE = \"SET_FRIEND_OFFLINE\";\r\n\r\n// chat relevant\r\nexport const ADD_CHAT = \"ADD_CHAT\";\r\nexport const DISSOLVE_CHAT = \"DISSOLVE_CHAT\";\r\nexport const SET_ACTIVE_CHAT = \"SET_ACTIVE_CHAT\";\r\nexport const ADD_MESSAGE_TO_CHAT = \"ADD_MESSAGE_TO_CHAT\";\r\nexport const LOAD_ACTIVE_CHAT_MESSAGES = \"LOAD_ACTIVE_CHAT_MESSAGES\";\r\n\r\n// circles relevant\r\nexport const ADD_CIRCLE = \"ADD_CIRCLE\";\r\nexport const DELETE_CIRCLE = \"DELETE_CIRCLE\";\r\n\r\n// notification relevant\r\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\r\nexport const DISMISS_NOTIFICATION = \"DISMISS_NOTIFICATION\";\r\nexport const DELETE_NOTIFICATION = \"DELETE_NOTIFICATION\";\r\n\r\n// user account relevant\r\nexport const ACCOUNT_UPDATE = \"ACCOUNT_UPDATE\";\r\nexport const SET_NIGHT_MODE = \"SET_NIGHT_MODE\";\r\n\r\n// Systerm relevant\r\nexport const ERROR = \"ERROR\";\r\nexport const REAUTH = \"REAUTH\";\r\nexport const OVER = \"OVER\";\r\nexport const updateAccount = e => ({ type: ACCOUNT_UPDATE, payload: e });\r\n\r\nexport const login = e => ({ type: LOGIN, payload: e });\r\nexport const logout = () => ({ type: LOGOUT });\r\n\r\nexport const loadChats = e => ({ type: LOAD_CHATS, payload: e });\r\nexport const loadUsers = e => ({ type: LOAD_USERS, payload: e });\r\nexport const loadFriends = e => ({ type: LOAD_FRIENDS, payload: e });\r\nexport const loadCircles= e => ({ type: LOAD_CIRCLES, payload: e });\r\nexport const loadNotifications = e => ({\r\n  type: LOAD_NOTIFICATIONS,\r\n  payload: e\r\n});\r\n\r\nexport const addFriend = e => ({ type: ADD_FRIEND, payload: e });\r\nexport const deleteFriend = e => ({ type: DELETE_FRIEND, payload: e });\r\nexport const setFriendOnline = e => ({ type: SET_FRIEND_ONLINE, payload: e });\r\nexport const setFriendOffline = e => ({ type: SET_FRIEND_OFFLINE, payload: e });\r\n\r\nexport const addChat = e => ({ type: ADD_CHAT, payload: e });\r\nexport const adissolveChat = e => ({ type: DISSOLVE_CHAT, payload: e });\r\nexport const setActiveChat = e => ({ type: SET_ACTIVE_CHAT, payload: e });\r\nexport const addMessageToChat = e => ({\r\n  type: ADD_MESSAGE_TO_CHAT,\r\n  payload: e\r\n});\r\nexport const loadMessages = e => ({\r\n  type: LOAD_ACTIVE_CHAT_MESSAGES,\r\n  payload: e\r\n});\r\n\r\nexport const addCircle = e => ({ type: ADD_CIRCLE, payload: e });\r\nexport const deleteCircle = e => ({ type: DELETE_CIRCLE, payload: e });\r\n\r\nexport const addNotification = e => ({ type: ADD_NOTIFICATION, payload: e });\r\nexport const dismissNotification = e => ({\r\n  type: DISMISS_NOTIFICATION,\r\n  payload: e\r\n});\r\nexport const deleteNotification = e => ({\r\n  type: DELETE_NOTIFICATION,\r\n  payload: e\r\n});\r\n\r\nexport const error = e => ({ type: ERROR, payload: e });\r\nexport const checkover = () => ({ type: OVER});\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ToggleLabel = styled.label`\r\n  display: flex;\r\n  cursor: pointer;\r\n  min-width: 50px;\r\n  min-height: 25px;\r\n  border-radius: 25px;\r\n  position: relative;\r\n  transition: background-color 0.2s;\r\n  background: ${props => (props.state ? \"rgba(90, 216, 177, 1)\" : \"rgba(0, 0, 0, 0.4)\")};\r\n`;\r\n\r\nconst ToggleSpan = styled.span`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: 2px;\r\n  min-width: 21px;\r\n  min-height: 21px;\r\n  border-radius: 50%;\r\n  transition: 0.2s;\r\n  background: rgb(245, 245, 245);\r\n  transform: ${props => (props.state ? \"translateX(calc(100% + 4px))\" : \"unset\")};\r\n`;\r\n\r\n\r\nconst ToggleSwitch = ({ onClick, state}) => (\r\n  <ToggleLabel onClick={onClick} state={state}>\r\n    <ToggleSpan state={state} />\r\n  </ToggleLabel>\r\n)\r\n\r\nexport default ToggleSwitch;","import React, { useCallback, useRef } from 'react';\r\nimport Captcha from 'react-captcha-code';\r\n\r\nconst Basic = ({setVerification}) => {\r\n    const handleClick = useCallback((captcha) => {\r\n        setVerification(captcha);\r\n        console.log('captcha:', captcha);\r\n      }, []);\r\n    \r\n      return <Captcha charNum={4} onChange={handleClick} />;\r\n};\r\n\r\nexport default Basic;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Input from \"../components/Common/Input\";\r\nimport Button from \"../components/Common/Button\";\r\nimport Form from \"../components/Common/Form\";\r\nimport { login } from \"../redux/actions\";\r\nimport ToggleSwitch from \"../components/Common/ToggleSwitch\";\r\nimport Basic from \"../components/Common/VerificationCode\";\r\n// set the fundamantal style of the page\r\nconst Page = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  & > p {\r\n    text-align: center;\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 0.875em;\r\n    color: rgba(0, 0, 0, 0.6);\r\n\r\n    & > a {\r\n      text-decoration: none;\r\n      color: inherit;\r\n      color: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SingleLine = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CheckLabel = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.775em;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  & > span {\r\n    margin-right: .5rem\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const [state, set] = useState({\r\n    username: { touched: false, value: \"\" },\r\n    password: { touched: false, value: \"\" },\r\n    input_verification: { touched: false, value: \"\" },\r\n    rememberMe: false\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [verification, setVerification] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleBlur = e =>\r\n    set({ ...state, [e]: { ...state[e], touched: true } });\r\n  const handleChange = (e, val) =>{\r\n    set({ ...state, [e]: { ...state[e], value: val } });\r\n    }\r\n\r\n  const validation = () => ({\r\n    username: state.username.value.trim() !== \"\",\r\n    password: state.password.value.trim() !== \"\",\r\n    verification: state.input_verification.value.trim() !== \"\",\r\n  });\r\n\r\n  const errors = validation();\r\n\r\n  const fake_url = \"http://127.0.0.1:5000/api/login\"\r\n//   const fake_url = \"http://127.0.0.1:4523/mock/982193/login\"\r\n  const real_url = \"/api/login\"\r\n  const handleSubmit = async e => {\r\n    if(verification.trim() !== state.input_verification.value.trim())\r\n        setError(\"Incorrect Verificaction Code\");\r\n    else{\r\n        try {\r\n      const resp = await fetch(fake_url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          username: state.username.value,\r\n          password: state.password.value,\r\n          remember: state.rememberMe\r\n        })\r\n      });\r\n\r\n      if (resp.status === 200) {\r\n        const json = await resp.json();\r\n        dispatch(login(json));\r\n      } else if (resp.status === 401) {\r\n        setError(\"Incorrect username/password\");\r\n      }\r\n    } catch (err) {\r\n      // Ignore\r\n    }}\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Form title=\"Login\" error={error} onSubmit={handleSubmit}>\r\n        <Input\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={state.username.value}\r\n          onChange={e => handleChange(\"username\", e.target.value)}\r\n          error={state.username.touched ? !errors[\"username\"] : false}\r\n          onBlur={() => handleBlur(\"username\")}\r\n          autocomplete=\"username\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={state.password.value}\r\n          onChange={e => handleChange(\"password\", e.target.value)}\r\n          error={state.password.touched ? !errors[\"password\"] : false}\r\n          onBlur={() => handleBlur(\"password\")}\r\n          autocomplete=\"password\"\r\n        />\r\n        <SingleLine>\r\n            <Input\r\n            label=\"Verification Code\"\r\n            type=\"VerificationCode\"\r\n            name=\"VerificationCode\"\r\n            value={state.input_verification.value}\r\n            onChange={e => handleChange(\"input_verification\", e.target.value)}\r\n            error={state.input_verification.touched ? !errors[\"verification\"] : false}\r\n            onBlur={() => handleBlur(\"input_verification\")}\r\n            />\r\n            <Basic setVerification={setVerification}/>\r\n        </SingleLine>\r\n        <CheckLabel>\r\n          <span>Remember me</span>\r\n          <ToggleSwitch\r\n            onClick={() => set({ ...state, rememberMe: !state.rememberMe })}\r\n            state={state.rememberMe}\r\n          />\r\n        </CheckLabel>\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={!Object.keys(errors).some(x => errors[x])}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      <p>\r\n        Don't have an account? <Link to=\"/register\">Register</Link>\r\n      </p>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport Input from \"../components/Common/Input\";\r\nimport Button from \"../components/Common/Button\";\r\nimport Form from \"../components/Common/Form\";\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  & > p {\r\n    text-align: center;\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 0.875em;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    & > a {\r\n      text-decoration: none;\r\n      color: inherit;\r\n      color: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Success = styled.p`\r\n  text-align: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.875em;\r\n  color: rgba(0, 205, 93, 1);\r\n`;\r\n\r\nconst Register = ({ history }) => {\r\n  const [state, set] = useState({\r\n    userNickname: { touched: false, value: \"\" },\r\n    username: { touched: false, value: \"\" },\r\n    password: { touched: false, value: \"\" },\r\n    passwordConfirm: { touched: false, value: \"\" },\r\n    firstname: { touched: false, value: \"\" },\r\n    lastname: { touched: false, value: \"\" },\r\n    email: { touched: false, value: \"\" }\r\n  });\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleBlur = e =>\r\n    set({ ...state, [e]: { ...state[e], touched: true } });\r\n\r\n  const handleChange = (val, e) => {\r\n    set({ ...state, [e]: { ...state[e], value: val } });\r\n  };\r\n\r\n  const validation = () => ({\r\n    userNickname: state.userNickname.value.trim() !== \"\",\r\n    username: state.username.value.trim() !== \"\",\r\n    password: state.password.value.trim() !== \"\",\r\n    passwordConfirm:\r\n      state.password.value.trim() === state.passwordConfirm.value.trim(),\r\n    firstname: state.firstname.value.trim() !== \"\",\r\n    lastname: state.lastname.value.trim() !== \"\",\r\n    email: state.email.value.trim() !== \"\"\r\n  });\r\n\r\n  const errors = validation();\r\n\r\n  //   表格提交\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const resp = await fetch(\"/api/register\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          userNickname: state.userNickname.value,\r\n          username: state.username.value,\r\n          password: state.password.value,\r\n          firstname: state.firstname.value,\r\n          lastname: state.lastname.value,\r\n          email: state.email.value\r\n        })\r\n      });\r\n      if (resp.status === 201) {\r\n        setSuccess(true);\r\n        return setTimeout(() => history.push(\"/login\"), 3000);\r\n      } else if (resp.status === 409) {\r\n        return setError(\"Username and/or email already exist!\");\r\n      } else {\r\n          \r\n        return setError(\"Issue during registration!\");\r\n      }\r\n    } catch (err) {\r\n        console.log(err)\r\n      return setError(\"Issue during registration!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Form title=\"Register\" error={error} onSubmit={handleSubmit}>\r\n        {success && (\r\n          <Success>Registration successful, Redirecting to login!</Success>\r\n        )}\r\n        <Input\r\n          label=\"UserNickname\"\r\n          type=\"text\"\r\n          name=\"userNickname\"\r\n          value={state.userNickname.value}\r\n          error={state.userNickname.touched && !errors[\"userNickname\"]}\r\n          onBlur={() => handleBlur(\"userNickname\")}\r\n          onChange={e => handleChange(e.target.value, \"userNickname\")}\r\n          autocomplete=\"user nickname\"\r\n        />\r\n        <Input\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={state.username.value}\r\n          error={state.username.touched && !errors[\"username\"]}\r\n          onBlur={() => handleBlur(\"username\")}\r\n          onChange={e => handleChange(e.target.value, \"username\")}\r\n          autocomplete=\"username\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={state.password.value}\r\n          error={state.password.touched && !errors[\"password\"]}\r\n          onBlur={() => handleBlur(\"password\")}\r\n          onChange={e => handleChange(e.target.value, \"password\")}\r\n          autocomplete=\"password\"\r\n        />\r\n        <Input\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          name=\"passwordConfirm\"\r\n          value={state.passwordConfirm.value}\r\n          error={state.passwordConfirm.touched && !errors[\"passwordConfirm\"]}\r\n          onBlur={() => handleBlur(\"passwordConfirm\")}\r\n          onChange={e => handleChange(e.target.value, \"passwordConfirm\")}\r\n          autocomplete=\"password\"\r\n        />\r\n        <Input\r\n          label=\"Firstname\"\r\n          type=\"text\"\r\n          name=\"firstname\"\r\n          value={state.firstname.value}\r\n          error={state.firstname.touched && !errors[\"firstname\"]}\r\n          onBlur={() => handleBlur(\"firstname\")}\r\n          onChange={e => handleChange(e.target.value, \"firstname\")}\r\n          autocomplete=\"firstname\"\r\n        />\r\n        <Input\r\n          label=\"Lastname\"\r\n          type=\"text\"\r\n          name=\"lastname\"\r\n          value={state.lastname.value}\r\n          error={state.lastname.touched && !errors[\"lastname\"]}\r\n          onBlur={() => handleBlur(\"lastname\")}\r\n          onChange={e => handleChange(e.target.value, \"lastname\")}\r\n          autocomplete=\"lastname\"\r\n        />\r\n        <Input\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={state.email.value}\r\n          error={state.email.touched && !errors[\"email\"]}\r\n          onBlur={() => handleBlur(\"email\")}\r\n          onChange={e => handleChange(e.target.value, \"email\")}\r\n          autocomplete=\"email\"\r\n        />\r\n        <Button disabled={!Object.keys(errors).some(x => errors[x])}>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <p>\r\n        Already have an account? <Link to=\"/login\">Login</Link>\r\n      </p>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withTheme(Register);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AvatarWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst AvatarImg = styled.div`\r\n  position: relative;\r\n  border-radius: 50%;\r\n  width: ${props => props.size};\r\n  height: ${props => props.size};\r\n  padding: 2px;\r\n  box-sizing: unset;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  background-image: url(${props => props.image});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-clip: padding-box;\r\n`;\r\n\r\nconst Activity = styled.div`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: ${props => (props.active ? \"#00C853\" : \"#d50000\")};\r\n`;\r\n\r\nconst Avatar = ({\r\n  image,\r\n  username,\r\n  userNickname,\r\n  size = \"40px\",\r\n  active,\r\n  onClick,\r\n  className,\r\n  displayStatus = false,\r\n}) => (\r\n  <AvatarWrapper className={className} onClick={onClick}>\r\n    <AvatarImg size={size} image={image} alt={userNickname}>\r\n      {/* {} mean JSX expression , which in it can perform calculations */}\r\n      {displayStatus && <Activity active={active} />}\r\n    </AvatarImg>\r\n  </AvatarWrapper>\r\n);\r\n\r\nexport default Avatar;\r\n// avatar paramter 图像地址image,用户名username,用户昵称userNickname,大小size = \"40px\",活跃状态active,点击头像相应函数onClick,类名className,是否展示displayStatus = false,\r\n// 返回\r\n// <div AvatarWrapper>\r\n//      <div AvatarImg>\r\n//          <div Activity></div>\r\n//      </div>\r\n","import React from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0.5em 1em;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: ${props =>\r\n    props.selected && props.theme.elemBackgroundHover};\r\n  border-radius: 12px;\r\n  margin: 0 0.5rem;\r\n  color: ${props => props.theme.backgroundColor};\r\n  transition: ${props => props.theme.transition};\r\n  &:hover {\r\n    background-color: ${props => props.theme.elemBackgroundHover};\r\n  }\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  margin-left: 0.75em;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.6725em;\r\n  color: inherit;\r\n  margin: 0;\r\n`;\r\n\r\nconst LastMessage = styled(Name)`\r\n  font-size: 0.6225em;\r\n  color: inherit;\r\n`;\r\n\r\nconst LastMessageTime = styled(LastMessage)`\r\n  color: inherit;\r\n`;\r\n\r\nconst Listitem = ({\r\n  onClick,\r\n  onContextMenu,\r\n  chatActive,\r\n  username,\r\n  userNickname,\r\n  avatar,\r\n  userActive,\r\n  displayStatus,\r\n  message = \"\",\r\n  timestamp = null\r\n}) => (\r\n  <Wrapper\r\n    onClick={onClick}\r\n    selected={chatActive}\r\n  >\r\n    <Avatar\r\n      active={userActive}\r\n      userNickname={userNickname}\r\n      displayStatus={displayStatus}\r\n      image={avatar}\r\n    />\r\n    <Column>\r\n      <Name>{userNickname}</Name>\r\n      <LastMessage>{message}</LastMessage>\r\n    </Column>\r\n    {timestamp && (\r\n      <LastMessageTime>\r\n        {new Date(timestamp).toLocaleTimeString().slice(0, 5)}\r\n      </LastMessageTime>\r\n    )}\r\n  </Wrapper>\r\n);\r\n\r\nexport default withTheme(Listitem);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0.5em 1em;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  background-color: ${props => props.selected && \"rgba(0, 0, 0, 0.075)\"};\r\n  border-radius: 12px;\r\n  margin: 0 0.5rem;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.075);\r\n  }\r\n`;\r\n\r\nconst NotificationText = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.65em;\r\n  padding: 0.25rem 0;\r\n  color: ${props => props.theme.backgroundColor};\r\n  & > span {\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  outline: none;\r\n  border-radius: 0.25em;\r\n  border: ${props =>\r\n    props.theme.backgroundColor || \"1px solid rgba(0, 0, 0, 0.2)\"};\r\n  padding: 0.25em;\r\n  color: ${props => props.theme.backgroundColor || \"rgba(0, 0, 0, 0.8)\"};\r\n  background-color: transparent;\r\n  font-size: 0.6em;\r\n  flex-grow: 1;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n  margin: ${props => props.margin || 0};\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n  padding: 0.25rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 0.5rem;\r\n`;\r\n\r\nconst ListNotification = ({ id, sender, message, type, socket, image }) => {\r\n  const handleAccept = () =>\r\n    socket.emit(\"FRIEND_REQUEST_ACCEPTED\", { username: sender, id: id });\r\n\r\n  const handleDelete = () => socket.emit(\"DELETE_NOTIFICATION\", id);\r\n\r\n  const nonActionable = type === \"ERROR\" || type === \"FRIEND_REQUEST_ACCEPTED\";\r\n  const actionable = type === \"FRIEND_REQUEST\";\r\n  return (\r\n    <Wrapper>\r\n      {actionable && <Avatar username={sender} image={image} />}\r\n      <Column>\r\n        <NotificationText>\r\n          <span>{message}</span>\r\n        </NotificationText>\r\n        {actionable && (\r\n          <ButtonRow>\r\n            <Button margin=\"0 .25em 0 0\" onClick={handleAccept}>\r\n              Accept\r\n            </Button>\r\n            <Button margin=\"0 0 0 .25em\" onClick={handleDelete}>\r\n              Reject\r\n            </Button>\r\n          </ButtonRow>\r\n        )}\r\n        {nonActionable && (\r\n          <ButtonRow>\r\n            <Button onClick={handleDelete}>Dismiss</Button>\r\n          </ButtonRow>\r\n        )}\r\n      </Column>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ListNotification;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  margin: 0 0.75rem 1.5rem 0.75rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725rem;\r\n  color: ${props => props.theme.backgroundColor};\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 12px;\r\n  padding: 0.5rem 0.75rem;\r\n  background-color: ${props => props.theme.inputBackground};\r\n  transition: ${props => props.theme.transition};\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst SearchInput = ({ search, value, onFocus }) => (\r\n  <Wrapper>\r\n    <Input\r\n      type=\"text\"\r\n      name=\"search\"\r\n      placeholder=\"Search\"\r\n      value={value}\r\n      onFocus={onFocus}\r\n      onChange={e => search(e.target.value)}\r\n    />\r\n  </Wrapper>\r\n);\r\n\r\nexport default SearchInput;\r\n","import React, { useState,useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ListItem from \"./ListItem\";\r\nimport Button from \"../Common/Button\"\r\nimport ListNotification from \"./ListNotification\";\r\nimport SearchInput from \"./Search\";\r\nimport { ADD_CHAT, LOAD_USERS, setActiveChat } from \"../../redux/actions\";\r\nimport ToggleSwitch from \"../Common/ToggleSwitch\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  color: ${props => props.theme.backgroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst BackgroundShadow = styled.div`\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  background-color: inherit;\r\n  border-radius: 0.25em;\r\n  padding: 1em;\r\n  flex-basis: 500px;\r\n  z-index: 4;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.5rem 0.75rem;\r\n    min-height: 2rem;\r\n    max-height: 8rem;\r\n    border-radius: 12px;\r\n    transition: all 0.05s ease-in-out;\r\n    margin: 0.5rem 1.5rem 0 1.5rem;\r\n    transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.justify || \"unset\"};\r\n  margin: ${props => props.margin || \"0 0 1.5rem 0;\"};\r\n`;\r\n\r\nconst Scroll = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    scrollbar-width: thin;\r\n    grid-area: lists;\r\n`;\r\n\r\nconst Scrollable = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  padding: 0 1.5rem;\r\n`;\r\n\r\nconst CreateButton = styled(Button)`\r\n`;\r\n\r\nconst SelectWindow = ({socket,setActiveList,user,resetButton}) => {\r\n    console.log(\"come select window!\")\r\n    const ScrollRef = useRef(null);\r\n    const friends = useSelector(state => state.rootReducer.friends)\r\n    const stateinit = (friends) => {\r\n        let local = [];\r\n        friends.map((single,index)=>local.push({...single,selected:true}));\r\n        return local;\r\n    };\r\n    let [state,setState] = useState( stateinit(friends) );\r\n    let usernames = [];\r\n\r\n    const handleUserSelected = (single) => {\r\n        let newstate = [...state];\r\n        newstate.find(d => d.username == single.username).selected = !single.selected;\r\n        setState(newstate);\r\n    };\r\n\r\n    const handleClickShadow = () => {\r\n        resetButton(false);\r\n        setActiveList(\"add\");\r\n    }\r\n    const handleButtonClick = () => {\r\n        let usernames = [];\r\n        state.map(d=>{\r\n            if(d.selected){\r\n                usernames.push(d.username)\r\n            }\r\n        })\r\n        console.log(usernames)\r\n        socket.emit(ADD_CHAT, usernames);\r\n    }\r\n    return (\r\n    <Wrapper>\r\n      <BackgroundShadow onClick={handleClickShadow}/>\r\n          <Modal>\r\n          <Scrollable ref={ScrollRef}>\r\n                {\r\n                state.map(d => (\r\n                    <Row justify={\"space-between\"}>\r\n                        <Column >\r\n                            <ListItem\r\n                            id={d.id}\r\n                            key={d.id}\r\n                            username={d.username}\r\n                            avatar={d.avatar}\r\n                            />\r\n                        </Column>\r\n                        <ToggleSwitch onClick={()=>handleUserSelected(d)} state={d.selected} />\r\n                </Row>\r\n                ))}\r\n            </Scrollable>\r\n            <ButtonWrapper>\r\n            <CreateButton onClick={handleButtonClick}>Create now!</CreateButton>\r\n            </ButtonWrapper>\r\n          </Modal>\r\n    </Wrapper>\r\n    )\r\n}\r\n\r\nexport default SelectWindow;","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../Common/Button\"\r\nimport SelectWindow from \"./GroupSelect\"\r\nimport { ADD_CHAT, LOAD_FRIENDS, setActiveChat } from \"../../redux/actions\";\r\n\r\nconst CreateButton = styled(Button)`\r\n\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  grid-area: messages;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 0;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst CreateGroup  = ({socket,setActiveList,user}) => {\r\n    const [newGroup,setnewGroup] = useState(false);\r\n    console.log(\"come create group!\");\r\n    const handleClickCreate = () => {\r\n        setnewGroup(true);\r\n    }\r\n    console.log(newGroup);\r\n    return(\r\n        <Wrapper>\r\n        <CreateButton onClick={handleClickCreate}>\r\n            Create New Group Chat!\r\n        </CreateButton>\r\n        {newGroup && <SelectWindow socket={socket} setActiveList={setActiveList} user={user} resetButton={setnewGroup} />}\r\n        </Wrapper>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateGroup;","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ListItem from \"./ListItem\";\r\nimport Button from \"../Common/Button\"\r\nimport ListNotification from \"./ListNotification\";\r\nimport SearchInput from \"./Search\";\r\nimport CreateGroup from \"./GroupChat\"\r\nimport {FaPlusCircle\r\n} from \"react-icons/fa\";\r\nimport { ADD_CHAT, LOAD_USERS, setActiveChat } from \"../../redux/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: ${props => props.theme.border};\r\n  min-width: 280px;\r\n  overflow-y: hidden;\r\n  grid-area: lists;\r\n  padding: 1.5rem 0;\r\n  z-index: 1;\r\n  background: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n  @media (max-width: 700px) {\r\n    position: absolute;\r\n    left: ${props => (props.open ? \"64px\" : \"-100%\")};\r\n    height: 100%;\r\n    transition: all 0.25s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Scroll = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  grid-area: lists;\r\n`;\r\n\r\nconst CircleButton = styled(FaPlusCircle)`\r\n    padding-right: 1em;\r\n    box-sizing: content-box;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items:center;\r\n    &:hover {\r\n        background-color: ${props => props.theme.elemBackgroundHover};\r\n      }\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  text-align: center;\r\n  margin: 0.5em 0;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725em;\r\n  color: ${props => props.theme.backgroundText};\r\n  background-color: ${props => props.theme.elemBackground};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Lists = ({ socket, open, activeList, setActiveList }) => {\r\n  // 搜索栏\r\n  const [search, setSearch] = useState(\"\");\r\n  // 当前选中的聊天框\r\n  const activeChat = useSelector(state => state.rootReducer.activeChat.id);\r\n  // 当前已有的提示\r\n  const notifications = useSelector(\r\n    state => state.rootReducer.user.notifications\r\n  );\r\n  // 当前用户相关的全部聊天框（如果检索包含特定用户 或者 没检索就展示全部）\r\n  const chats = useSelector(state => state.rootReducer.chats).filter(\r\n    d => search === \"\" || d.recipient.includes(search)\r\n  );\r\n  // 当前用户相关的全部好友（如果检索包含特定用户 或者 没检索就展示全部）\r\n  const friends = useSelector(state => state.rootReducer.friends).filter(\r\n    d => search === \"\" || d.username.includes(search) || d.userNickname.includes(search)\r\n  );\r\n\r\n  // 全部用户（如果检索包含特定用户 需要用username来检索 或者 没检索就展示全部）\r\n  const accounts = useSelector(state => state.rootReducer.accounts).filter(\r\n    d => search === \"\" || d.username.includes(search)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // 创建新聊天\r\n  const handleNewChat = (username, id) => {\r\n    //是否已存在\r\n    let check = chats.find(d => d.recipient === [username]);\r\n    //如果存在\r\n    if (check) {\r\n    //todo check setActiveChat\r\n      dispatch(\r\n        setActiveChat({ id: check.id, recipient: [username], recipientId: [id] })\r\n      );\r\n    } else {\r\n    //todo check一下与后端一不一致\r\n      socket.emit(ADD_CHAT, [username]);\r\n    }\r\n    setActiveList(\"chats\");\r\n  };\r\n\r\n  //如果当前是这个区域（联系人、对话框）展示\r\n  const disp = e =>  activeList === e;\r\n  //展示title\r\n  const dispTitle = e => search !== \"\" && activeList === e;\r\n\r\n  return (\r\n    <Wrapper open={open}>\r\n      {/* 搜索框 */}\r\n      <SearchInput\r\n        value={search}\r\n        onFocus={() => socket.emit(LOAD_USERS)}\r\n        search={setSearch}\r\n      />\r\n      {/* 可滑动 */}\r\n      <Scroll>\r\n        {/* 聊天框 */}\r\n        {dispTitle(\"chats\") && <SectionTitle>Chats</SectionTitle>}\r\n        {disp(\"chats\") && <CreateGroup socket={socket} setActiveList={setActiveList}/>}\r\n        {disp(\"chats\") &&\r\n          chats.map(d => (\r\n            <ListItem\r\n              key={d.id}\r\n              userNickname={d.chat_name}\r\n              avatar={d.avatar}\r\n              userActive={d.active}\r\n              chatActive={activeChat === d.id}\r\n              displayStatus\r\n              onClick={() =>\r\n                dispatch(\r\n                  setActiveChat({\r\n                    id: d.id,\r\n                    chat_name:d.chat_name,\r\n                    active:d.active,\r\n                    recipient: d.recipient,\r\n                    recipientId: d.recipientId,\r\n                    avatar: d.avatar\r\n                  })\r\n                )\r\n              }\r\n              message={d.last_message}\r\n              timestamp={d.last_message_timestamp}\r\n            />\r\n          ))}\r\n        \r\n        {/* 联系人 */}\r\n        {dispTitle(\"friends\") && <SectionTitle>Friends</SectionTitle>}\r\n        {disp(\"friends\") &&\r\n          friends.map(d => (\r\n            <ListItem\r\n              id={d.id}\r\n              key={d.id}\r\n              userNickname={d.userNickname}\r\n              onClick={() => handleNewChat(d.username, d.id)}\r\n              avatar={d.avatar}\r\n              active={d.active}\r\n              displayStatus\r\n            />\r\n          ))}\r\n        {/* 新用户 */}\r\n        {dispTitle(\"add\") && (\r\n          <>\r\n            <SectionTitle>Users</SectionTitle>\r\n            {accounts.map(d => (\r\n            <ItemWrapper>\r\n              <ListItem\r\n                id={d.id}\r\n                key={d.id}\r\n                userNickname={d.userNickname}\r\n                avatar={d.avatar}\r\n              />\r\n              <CircleButton size=\"25px\" onClick={() => socket.emit(\"FRIEND_REQUEST\", d.id)}/>\r\n            </ItemWrapper>\r\n            ))}\r\n          </>\r\n        )}\r\n        {/* 新消息提醒 */}\r\n        {disp(\"notifications\") &&\r\n          notifications.map(d => (\r\n            <ListNotification\r\n              socket={socket}\r\n              id={d.id}\r\n              key={d.id}\r\n              sender={d.sender}\r\n              message={d.message}\r\n              type={d.type}\r\n              image={d.avatar}\r\n            />\r\n          ))}\r\n      </Scroll>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  border-radius: 0.5em;\r\n  background-color: ${props => props.theme.buttonBackground};\r\n  color: ${props => props.theme.buttonText};\r\n  border: ${props => props.theme.buttonBorder};\r\n  padding: 0.75em 1em;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.7em;\r\n  width: max-content;\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 1px;\r\n  height: 1px;\r\n  position: absolute;\r\n`;\r\n\r\nconst FileUpload = ({ file, className, children, text, uid }) => {\r\n  const handleChange = e => {\r\n    if (\r\n      e.currentTarget.files.length > 0 &&\r\n      e.currentTarget.files[0].type.split(\"/\")[0] === \"image\"\r\n    ) {\r\n    //todo check the file means\r\n      file(\r\n        e.currentTarget.files[0],\r\n        e.currentTarget.files[0].name.split(\".\")[1]\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Label htmlFor={uid} className={className}>\r\n      {children}\r\n      {text}\r\n      <Input type=\"file\" onChange={handleChange} id={uid} name={uid} />\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n\r\n// fileupload paramter 文件本身函数file 类名classname,子节点children,上传显示文本text，指定绑定到哪一个元素上uid\r\n// 返回\r\n// <label Label>\r\n//        children and text\r\n//       <input file>\r\n// </label>","const emojis = [\r\n  \"😀\",\r\n  \"😁\",\r\n  \"😂\",\r\n  \"🤣\",\r\n  \"😃\",\r\n  \"😄\",\r\n  \"😅\",\r\n  \"😆\",\r\n  \"😉\",\r\n  \"😊\",\r\n  \"😋\",\r\n  \"😎\",\r\n  \"😍\",\r\n  \"😘\",\r\n  \"🥰\",\r\n  \"😗\",\r\n  \"😙\",\r\n  \"😚\",\r\n  \"🙂\",\r\n  \"🤗\",\r\n  \"🤩\",\r\n  \"🤔\",\r\n  \"🤨\",\r\n  \"😐\",\r\n  \"😑\",\r\n  \"😶\",\r\n  \"🙄\",\r\n  \"😏\",\r\n  \"😣\",\r\n  \"😥\",\r\n  \"😮\",\r\n  \"🤐\",\r\n  \"😯\",\r\n  \"😪\",\r\n  \"😫\",\r\n  \"😴\",\r\n  \"😌\",\r\n  \"😛\",\r\n  \"😜\",\r\n  \"😝\",\r\n  \"🤤\",\r\n  \"😒\",\r\n  \"😓\",\r\n  \"😔\",\r\n  \"😕\",\r\n  \"🙃\",\r\n  \"🤑\",\r\n  \"😲\",\r\n  \"☹️\",\r\n  \"🙁\",\r\n  \"😖\",\r\n  \"😞\",\r\n  \"😟\",\r\n  \"😤\",\r\n  \"😢\",\r\n  \"😭\",\r\n  \"😦\",\r\n  \"😧\",\r\n  \"😨\",\r\n  \"😩\",\r\n  \"🤯\",\r\n  \"😬\",\r\n  \"😰\",\r\n  \"😱\",\r\n  \"🥵\",\r\n  \"🥶\",\r\n  \"😳\",\r\n  \"🤪\",\r\n  \"😵\",\r\n  \"😡\",\r\n  \"😠\",\r\n  \"🤬\",\r\n  \"😷\",\r\n  \"🤒\",\r\n  \"🤕\",\r\n  \"🤢\",\r\n  \"🤮\",\r\n  \"🤧\",\r\n  \"😇\",\r\n  \"🤠\",\r\n  \"🤡\",\r\n  \"🥳\",\r\n  \"🥴\",\r\n  \"🥺\",\r\n  \"🤥\",\r\n  \"🤫\",\r\n  \"🤭\",\r\n  \"🧐\",\r\n  \"🤓\",\r\n  \"😈\",\r\n  \"👿\",\r\n  \"👹\",\r\n  \"👺\",\r\n  \"💀\",\r\n  \"👻\",\r\n  \"👽\",\r\n  \"🤖\",\r\n  \"💩\",\r\n  \"😺\",\r\n  \"😸\",\r\n  \"😹\",\r\n  \"😻\",\r\n  \"😼\",\r\n  \"😽\",\r\n  \"🙀\",\r\n  \"😿\",\r\n  \"😾\"\r\n];\r\n\r\nexport default emojis;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport emojis from \"./Emojis\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  left: ${props => props.right}px;\r\n  max-width: 200px;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n  max-height: 200px;\r\n  border-radius: 12px;\r\n  background-color: inherit;\r\n  scrollbar-width: thin;\r\n  padding: 0.25rem;\r\n  top: ${props => props.top}px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst Emoji = styled.div`\r\n  display: flex;\r\n  color: rgba(0, 0, 0, 1);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst EmojiContainer = ({ selected, right, top }) => (\r\n  <Wrapper right={right} top={top}>\r\n    {emojis.map(d => (\r\n      <Emoji key={d} onClick={() => selected(d)}>{d}</Emoji>\r\n    ))}\r\n  </Wrapper>\r\n);\r\n\r\nexport default EmojiContainer;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ADD_MESSAGE_TO_CHAT } from \"../../redux/actions\";\r\nimport { FaSmile, FaImage } from \"react-icons/fa\";\r\nimport FileUpload from \"../Common/FileUpload\";\r\nimport EmojiContainer from \"../Emoji/EmojiContainer\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5rem 0.75rem;\r\n  min-height: 2rem;\r\n  max-height: 8rem;\r\n  border-radius: 12px;\r\n  color: ${props => props.theme.backgroundColor};\r\n  background-color: ${props => props.theme.inputBackground};\r\n  transition: all 0.05s ease-in-out;\r\n  margin: 0.5rem 1.5rem 0 1.5rem;\r\n  transition: ${props => props.theme.transition};\r\n  &:focus-within {\r\n    ${props => props.theme.foregroundColor};\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: pre-wrap;\r\n  overflow-wrap: break-word;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  overflow: auto;\r\n  scrollbar-width: thin;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725rem;\r\n  line-height: 140%;\r\n  height: 100%;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ImageBtn = styled(FileUpload)`\r\n  background-color: transparent;\r\n  display: flex;\r\n  padding: 0;\r\n  color: inherit;\r\n  > svg {\r\n    font-size: 20px;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst EmojiBtn = styled(FaSmile)`\r\n  margin-right: 0.5rem;\r\n  color: inherit;\r\n`;\r\n\r\nconst ChatInput = ({ socket, activeChatId }) => {\r\n  const ref = useRef(null);\r\n  const [emojiSelector, set] = useState({ open: false, top: 0, right: 0 });\r\n  const placeholder = \"Enter message...\";\r\n\r\n  const handleFile = async (image, extension) => {\r\n    try {\r\n      if (activeChatId !== \"\") {\r\n        socket.emit(ADD_MESSAGE_TO_CHAT, {\r\n          image: image,\r\n          extension: extension,\r\n          chat: activeChatId\r\n        });\r\n      }\r\n    } catch (err) {\r\n      // Ignore\r\n    }\r\n  };\r\n\r\n  const sendMessage = e => {\r\n    let text = e.currentTarget.innerText.trim();\r\n    if (!e.shiftKey && e.key === \"Enter\" && activeChatId !== \"\" && text !== \"\") {\r\n      e.cancelBubble = true;\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n        socket.emit(ADD_MESSAGE_TO_CHAT, {\r\n        message: text,\r\n        chat: activeChatId\r\n      });\r\n      e.currentTarget.innerText = \"\";\r\n    }\r\n    set(false);\r\n  };\r\n\r\n  const handleFocusBlur = e => {\r\n    if (e.currentTarget.innerText.trim() === placeholder) {\r\n      e.currentTarget.innerText = \"\";\r\n    } else if (e.currentTarget.innerText.trim() === \"\") {\r\n      e.currentTarget.innerText = placeholder;\r\n    }\r\n  };\r\n\r\n  const addEmoji = icon => {\r\n    if (ref.current.innerText.trim() === placeholder) {\r\n      return (ref.current.innerText = icon);\r\n    }\r\n    return (ref.current.innerText += icon);\r\n  };\r\n\r\n  const handleEmojiSelectorOpen = e => {\r\n    if (emojiSelector.open) {\r\n      return set({ ...emojiSelector, open: false });\r\n    }\r\n    let rect = e.currentTarget.getBoundingClientRect();\r\n    return set({\r\n      open: !emojiSelector.open,\r\n      right: rect.right - 220 + rect.width,\r\n      top: rect.top - 200 - rect.height\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ref) ref.current.innerText = placeholder;\r\n  }, [activeChatId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        contentEditable=\"true\"\r\n        ref={ref}\r\n        onKeyDown={sendMessage}\r\n        onFocus={handleFocusBlur}\r\n        onBlur={handleFocusBlur}\r\n        suppressContentEditableWarning={true}\r\n      >\r\n        {placeholder}\r\n      </Input>\r\n      <EmojiBtn onClick={handleEmojiSelectorOpen} size=\"1em\" />\r\n      {emojiSelector.open && (\r\n        <EmojiContainer\r\n          selected={addEmoji}\r\n          top={emojiSelector.top}\r\n          right={emojiSelector.right}\r\n        />\r\n      )}\r\n      <ImageBtn uid=\"mms\" file={handleFile}>\r\n        <FaImage size=\"1em\" />\r\n      </ImageBtn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Img = styled.img`\r\n  max-width: 100%;\r\n  max-height: 200px;\r\n  display: ${p => (p.state === \"loaded\" ? \"unset\" : \"none\")};\r\n`;\r\n\r\nconst Image = ({ image, onClick }) => {\r\n  const [state, set] = useState(\"loading\");\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        state={state}\r\n        src={image}\r\n        onError={() => set(\"failure\")}\r\n        onLoad={() => set(\"loaded\")}\r\n        alt=\"Image not available\"\r\n        onClick={onClick}\r\n      />\r\n      {image && state === \"loading\" && <p>Loading</p>}\r\n      {image && state === \"failure\" && <p>Failure</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\nimport Image from \"./Image\";\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => (props.justify ? \"flex-start\" : \"flex-end\")};\r\n  padding: 0.25em 0;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst MessageContent = styled.div`\r\n  border-radius: ${props =>\r\n    props.borderRadius ? \".25em 1em 1em\" : \"1em .25em 1em 1em\"};\r\n  margin-left: ${props => (props.margin ? \".5rem\" : \"unset\")};\r\n  padding: ${props => (props.image ? \"0\" : \"0.5em 1em\")};\r\n  max-width: ${props => (props.image ? \"35%\" : \"unset\")};\r\n  overflow: ${props => (props.image ? \"hidden\" : \"unset\")};\r\n  display: ${props => (props.image ? \"flex\" : \"unset\")};\r\n  flex-direction: ${props => (props.image ? \"column\" : \"unset\")};\r\n  background-color: ${props => props.theme.messageBackground};\r\n  transition: ${props => props.theme.transition};\r\n  color: inherit;\r\n  white-space: pre-wrap;\r\n  & > span {\r\n    font-family: \"Roboto\", sans-serif;\r\n    text-rendering: optimizeLegibility;\r\n    font-size: 0.85em;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst Message = ({\r\n  received = false,\r\n  message,\r\n  recipient,\r\n  avatar,\r\n  image,\r\n  onClick\r\n}) => (\r\n  <Wrapper justify={received}>\r\n    {received && <Avatar size=\"20px\" name={recipient} image={avatar} />}\r\n    <MessageContent margin={received} borderRadius={received} image={image}>\r\n      <span>{message}</span>\r\n      {image && <Image image={image} onClick={onClick} />}\r\n    </MessageContent>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Message;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { LOAD_ACTIVE_CHAT_MESSAGES } from \"../../redux/actions\";\r\nimport Avatar from \"../Common/Avatar\";\r\n\r\nconst TitleWrapper = styled.div`\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst TitleCotent = styled.div`\r\n  display: flex;\r\n  align-items:center;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ChatTitle = ({ avatar,chat_name,active_state }) => {\r\n    console.log(chat_name)\r\n    return (\r\n      <TitleWrapper>\r\n        <Avatar size=\"20px\" image={avatar}active={active_state}>\r\n        </Avatar>\r\n        <TitleCotent>\r\n            {chat_name}\r\n        </TitleCotent>\r\n      </TitleWrapper>\r\n    );\r\n  };\r\n  \r\n  export default ChatTitle;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Shadow = styled.div`\r\n  position: absolute;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Image = styled.img`\r\nmax-height: 90vh;\r\nmax-width: 90vw;\r\nborder-radius: 1em;\r\n`\r\n\r\nconst ImageViewer = ({ image, callback }) => (\r\n  <Wrapper>\r\n    <Shadow onClick={callback} />\r\n    <Image src={image} onClick={callback}/>\r\n  </Wrapper>\r\n);\r\n\r\nexport default ImageViewer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Message from \"./Message\";\r\nimport ChatTitle from \"./ChatTitle\";\r\nimport { LOAD_ACTIVE_CHAT_MESSAGES } from \"../../redux/actions\";\r\nimport ImageViewer from \"./ImageViewer\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  grid-area: messages;\r\n  justify-content: center;\r\n  padding: 1.5rem 0;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Scrollable = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  padding: 0 1.5rem;\r\n`;\r\n\r\nconst Messages = ({ socket }) => {\r\n  const ScrollRef = useRef(null);\r\n  const chat = useSelector(state => state.rootReducer.activeChat);\r\n  const user = useSelector(state => state.rootReducer.user);\r\n  const [imageViewer, set] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chat.id) socket.emit(LOAD_ACTIVE_CHAT_MESSAGES, chat.id);\r\n  }, [socket, chat.id]);\r\n\r\n  useEffect(() => {\r\n    ScrollRef.current.scrollTop = ScrollRef.current.scrollHeight;\r\n  }, [chat.messages]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ChatTitle avatar={chat.avatar} chat_name={chat.chat_name} active_state={chat.active}>\r\n      </ChatTitle>\r\n      {imageViewer && (\r\n        <ImageViewer image={imageViewer} callback={() => set(null)} />\r\n      )}\r\n      <Scrollable ref={ScrollRef}>\r\n        {chat.id !== null &&\r\n          chat.messages.map(d => {\r\n            console.log(d.message)  ;\r\n            return (\r\n            <Message\r\n              key={d.id}\r\n              received={d.username !== user.username}\r\n              message={d.message}\r\n              recipient={d.userNickname}\r\n              avatar={chat.avatar}\r\n              image={d.image}\r\n              onClick={() => set(d.image)}\r\n            />\r\n          )})}\r\n      </Scrollable>\r\n      <ChatInput socket={socket} activeChatId={chat.id} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  FaUserCircle,\r\n  FaBell,\r\n  FaCog,\r\n  FaMoon\r\n} from \"react-icons/fa\";\r\nimport{\r\n    AiFillCompass,\r\n    AiFillMessage,\r\n} from \"react-icons/ai\";\r\nimport{\r\n    IoMdPersonAdd\r\n} from \"react-icons/io\";\r\nimport Avatar from \"./Common/Avatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  grid-area: nav;\r\n  padding: 1.5rem 0;\r\n  justify-content: space-between;\r\n  z-index: 2;\r\n  border-right: ${props => props.theme.border};\r\n  background: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst IconNotice = styled.div`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  position: relative;\r\n  margin-bottom: 10px;\r\n  visible:true;\r\n  background-color: #d50000;\r\n`;\r\n\r\nconst Contacts = styled(FaUserCircle)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"friends\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Circles = styled(AiFillCompass)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"circles\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Chats = styled(AiFillMessage)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"chats\" ? p.theme.foregroundColor : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Add = styled(IoMdPersonAdd)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"add\" ? p.theme.foregroundColor : p.theme.backgroundColor};\r\n    `;\r\n\r\nconst Notifications = styled(FaBell)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"notifications\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Settings = styled(FaCog)`\r\n  padding: 0.5em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"settings\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n\r\n`;\r\n\r\nconst NightMode = styled(FaMoon)`\r\n  padding: 0.5em 0;\r\n  box-sizing: content-box;\r\n  color: ${p => p.theme.nightModeBtn};\r\n`;\r\n\r\nconst ListOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst AppOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  margin: 0 0 0.75rem 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Navbar = ({\r\n  avatar,\r\n  activeList,\r\n  setActiveList,\r\n  setPos,\r\n  setNightModeState,\r\n  nightModeState\r\n}) => {\r\n    // 是否有新消息提示\r\n    const has_notifications = useSelector(\r\n        state => state.rootReducer.user.notifications\r\n      );\r\n    // notification是否带小红点提醒\r\n    const display = () => {\r\n        let temp = true;\r\n        for(let item in has_notifications){\r\n            temp = temp && !item.dismissed;\r\n        }\r\n        //如果没消息或者消息都被dismissed就返回假\r\n        return temp && (has_notifications.length !== 0)\r\n    }\r\n\r\n\r\n    return(\r\n  <Wrapper>\r\n    <ListOptions>\r\n      {/* 头像 */}\r\n      <StyledAvatar size=\"32px\" image={avatar} onClick={setPos} />\r\n      {/* 联系人 */}\r\n      <IconWrapper>\r\n        <Contacts\r\n            size=\"25px\"\r\n            active={activeList}\r\n            onClick={() => setActiveList(\"friends\")}\r\n        />\r\n      </IconWrapper>\r\n      {/* 群聊 */}\r\n      <IconWrapper>\r\n        <Chats\r\n            size=\"25px\"\r\n            active={activeList}\r\n            onClick={() => setActiveList(\"chats\")}\r\n        />\r\n      </IconWrapper>\r\n      {/* 朋友圈 */}\r\n      <IconWrapper>\r\n        <Circles\r\n            size=\"25px\"\r\n            active={activeList}\r\n            onClick={() => setActiveList(\"circles\")}\r\n        />\r\n     </IconWrapper>\r\n     {/* 信息提示 */}\r\n     <IconWrapper>\r\n        <Notifications\r\n            size=\"25px\"\r\n            active={activeList}\r\n            onClick={() => setActiveList(\"notifications\")}\r\n        />\r\n        {display()&&<IconNotice ></IconNotice>}\r\n      </IconWrapper>\r\n      {/* 新增 */}\r\n      <IconWrapper>\r\n        <Add\r\n            size=\"25px\"\r\n            active={activeList}\r\n            onClick={() => setActiveList(\"add\")}\r\n        />\r\n     </IconWrapper>\r\n    </ListOptions>\r\n    {/* 选项 */}\r\n    <AppOptions>\r\n      {/* 夜间模式 */}\r\n      <NightMode\r\n        size=\"20px\"\r\n        onClick={() => setNightModeState(!nightModeState)}\r\n      />\r\n      {/* 设置 */}\r\n      <Settings\r\n        size=\"20px\"\r\n        active={activeList}\r\n        onClick={() => setActiveList(\"settings\")}\r\n      />\r\n    </AppOptions>\r\n  </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"./Common/Avatar\";\r\nimport { ACCOUNT_UPDATE } from \"../redux/actions\";\r\nimport FileUpload from \"./Common/FileUpload\";\r\nimport ToggleSwitch from \"./Common/ToggleSwitch\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  color: ${props => props.theme.backgroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst BackgroundShadow = styled.div`\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  background-color: inherit;\r\n  border-radius: 0.25em;\r\n  padding: 1em;\r\n  flex-basis: 500px;\r\n  z-index: 4;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.justify || \"unset\"};\r\n  margin: ${props => props.margin || \"0 0 1.5rem 0;\"};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 400;\r\n  color: inherit;\r\n  font-size: 1.25rem;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst Option = styled.p`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  color: inherit;\r\n  font-size: 0.8em;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst Description = styled(Option)`\r\n  font-weight: 400;\r\n  font-size: 0.6em;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Settings = ({ socket, setActiveList, visible_in_searches, avatar }) => {\r\n  const handleVisibilityUpdate = () =>\r\n    socket.emit(ACCOUNT_UPDATE, {\r\n      update: \"visible_in_searches\",\r\n      value: !visible_in_searches\r\n    });\r\n\r\n  const handleFile = async (file, extension) => {\r\n    socket.emit(ACCOUNT_UPDATE, {\r\n      update: \"avatar\",\r\n      extension: extension,\r\n      value: file\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BackgroundShadow onClick={() => setActiveList(\"chats\")} />\r\n      <Modal>\r\n        <Row>\r\n          <Avatar image={avatar} />\r\n          <Title>Account Settings</Title>\r\n        </Row>\r\n        <Row justify=\"space-between\" margin=\"0.75rem 0\">\r\n          <Column>\r\n            <Option>Account Visibility</Option>\r\n            <Description>\r\n              Enable other users to find your account via search.\r\n            </Description>\r\n          </Column>\r\n          <ToggleSwitch\r\n            onClick={handleVisibilityUpdate}\r\n            state={visible_in_searches}\r\n          />\r\n        </Row>\r\n        <Row justify=\"space-between\" margin=\"0.75rem 0\">\r\n          <Column>\r\n            <Option>Change Avatar</Option>\r\n            <Description>Upload an image to use as an avatar.</Description>\r\n          </Column>\r\n          <FileUpload uid=\"avatar\" file={handleFile} text=\"Upload Image\" />\r\n        </Row>\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React,{ useRef, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ADD_CIRCLE } from \"../../redux/actions\";\r\nimport Button from \"../Common/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  color: ${props => props.theme.backgroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5rem 0.75rem;\r\n  min-height: 5rem;\r\n  max-height: 10rem;\r\n  border-radius: 12px;\r\n  color: ${props => props.theme.backgroundColor};\r\n  background-color: ${props => props.theme.inputBackground};\r\n  transition: all 0.05s ease-in-out;\r\n  margin: 0.5rem 1.5rem 0 1.5rem;\r\n  transition: ${props => props.theme.transition};\r\n  &:focus-within {\r\n    ${props => props.theme.foregroundColor};\r\n  }\r\n`;\r\n\r\nconst BackgroundShadow = styled.div`\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  background-color: inherit;\r\n  border-radius: 0.25em;\r\n  padding: 1em;\r\n  flex-basis: 500px;\r\n  z-index: 4;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  white-space: pre-wrap;\r\n  overflow-wrap: break-word;\r\n  min-height: 5rem;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  overflow: auto;\r\n  scrollbar-width: thin;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725rem;\r\n  line-height: 140%;\r\n  height: 100%;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst CircleAdd = ({ socket, setActiveList, user, resetButton}) => {\r\n    const ref = useRef(null);\r\n    const [inputText,SetInput] = useState(\"\")\r\n    const placeholder = \"Record new moment as you like!\";\r\n    const handleAddCircle = () =>{\r\n    socket.emit(ADD_CIRCLE ,{\r\n      userId: user.id,\r\n      circle:inputText\r\n    })\r\n    resetButton(false);\r\n    setActiveList(\"circles\");\r\n    };\r\n\r\n    const handleClickShadow = () => {\r\n        resetButton(false);\r\n        setActiveList(\"circles\");\r\n    }\r\n    const cancel_enter = e => {\r\n    let text = e.currentTarget.innerText.trim();\r\n    SetInput(text);\r\n    if (!e.shiftKey && e.key === \"Enter\" && text !== \"\") {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        }\r\n    }\r\n    const handleFocusBlur = e => {\r\n        if (e.currentTarget.innerText.trim() === placeholder) {\r\n          e.currentTarget.innerText = \"\";\r\n        } else if (e.currentTarget.innerText.trim() === \"\") {\r\n          e.currentTarget.innerText = placeholder;\r\n        }\r\n      };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BackgroundShadow onClick={handleClickShadow} />\r\n      <Modal>\r\n          <InputWrapper>\r\n            <Input\r\n            contentEditable=\"true\"\r\n            ref={ref}\r\n            onKeyDown={cancel_enter}\r\n            onchange={e=>(SetInput(e.currentTarget.innerText.trim()))}\r\n            onFocus={handleFocusBlur}\r\n            onBlur={handleFocusBlur}\r\n            suppressContentEditableWarning={true}\r\n        >{placeholder}</Input>\r\n        </InputWrapper>\r\n        <Button onClick={handleAddCircle}>Show it now!</Button>\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CircleAdd;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\nimport Image from \"../Messages/Image\";\r\nimport {CgMoreR} from \"react-icons/cg\";\r\nimport {AiOutlineLike} from \"react-icons/ai\";\r\nimport {BiCommentDetail} from \"react-icons/bi\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  align-content: flex-content;\r\n  justify-content:  flex-start;\r\n  flex-direction: column;\r\n  padding: 0.25em 0;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n  border-bottom: 1px solid #000;\r\n`;\r\n\r\nconst CreaterWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  align-content: flex-content;\r\n  justify-content:  flex-start;\r\n  padding: 0.25em 0;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Creater = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  align-content: flex-content;\r\n  justify-content:  flex-start;\r\n  padding: 0.25em 0.25em 0.25em 1em;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Time = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  align-content: flex-content;\r\n  justify-content:  flex-end;\r\n  padding-left: 1em;\r\n  padding-top: 0.25em;\r\n  padding-bottom:0.25em;\r\n  padding-right: 40em;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst CircleContent = styled.div`\r\n  padding: ${props => (props.image ? \"0\" : \"0.25em 0.25em 1em 1em\")};\r\n  max-width: ${props => (props.image ? \"35%\" : \"unset\")};\r\n  overflow: ${props => (props.image ? \"hidden\" : \"unset\")};\r\n  display: ${props => (props.image ? \"flex\" : \"unset\")};\r\n  flex-direction: ${props => (props.image ? \"column\" : \"unset\")};\r\n  transition: ${props => props.theme.transition};\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst Iconmore = styled(CgMoreR)`\r\n    box-sizing: content-box;\r\n    margin-right: 1em;\r\n    color: ${p =>\r\n    p.active ? p.theme.foregroundColor : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Iconlike = styled(AiOutlineLike)`\r\n    box-sizing: content-box;\r\n    color: ${p =>\r\n    p.active === \"chats\" ? p.theme.foregroundColor : p.theme.backgroundColor};\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    margin-right: 1em;\r\n    margin-left: 1em;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Iconcomment = styled(BiCommentDetail)`\r\n    box-sizing: content-box;\r\n\r\n    color: ${p =>\r\n    p.active === \"chats\" ? p.theme.foregroundColor : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Optional = styled.div`\r\n    display: flex;\r\n    background-color: ${props => props.theme.messageBackground};\r\n    transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst BottomDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: flex-content;\r\n    padding: 0.25em 0.25em 0.25em 0em;\r\n    color: ${props => props.theme.foregroundColor};\r\n    transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Circle = ({\r\n  circle,\r\n  creater,\r\n  avatar,\r\n  time,\r\n  image,\r\n  onClick\r\n}) => {\r\n    const [clickOrnot,setclickOrnot] = useState(false)\r\n    const handleClick = () => {\r\n        setclickOrnot(!clickOrnot);\r\n    }\r\n    return (\r\n  <Wrapper>\r\n    <CreaterWrapper>\r\n        <Avatar size=\"20px\" name={creater} image={avatar} />\r\n        <Creater>{creater}</Creater>\r\n    </CreaterWrapper>\r\n    <CircleContent image={image}>\r\n      <div>{circle}</div>\r\n      {image && <Image image={image} onClick={onClick} />}\r\n    </CircleContent>\r\n    <BottomDiv>\r\n        <Time>{time}</Time>\r\n        <Iconmore size=\"20px\" active={clickOrnot} onClick={handleClick}/>\r\n        {clickOrnot && <Optional>\r\n            <IconWrapper>\r\n                <Iconlike size=\"20px\"/>Like\r\n            </IconWrapper>\r\n            <IconWrapper>\r\n                <Iconcomment size=\"20px\"/>Comment\r\n            </IconWrapper>\r\n        </Optional>}\r\n    </BottomDiv>\r\n  </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Circle;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport CircleAdd from \"./CircleAdd\";\r\nimport Circle from \"./Circle\";\r\nimport ImageViewer from \"../Messages/ImageViewer\";\r\nimport Button from \"../Common/Button\";\r\nimport ChatTitle from \"../Messages/ChatTitle\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  grid-area: messages;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 0;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.5rem 0.75rem;\r\n    min-height: 2rem;\r\n    max-height: 8rem;\r\n    border-radius: 12px;\r\n    transition: all 0.05s ease-in-out;\r\n    margin: 0.5rem 1.5rem 0 1.5rem;\r\n    transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Scrollable = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  padding: 0 1.5rem;\r\n`;\r\n\r\nconst CircleShow = ({ socket , setActiveList}) => {\r\n  const ScrollRef = useRef(null);\r\n  const [newCircle,setNewcircle] = useState(false);\r\n  const circles = useSelector(state => state.rootReducer.circles);\r\n  const user = useSelector(state => state.rootReducer.user);\r\n  const [imageViewer, set] = useState(null);\r\n  const handleButtonClick = () => ( setNewcircle(true) );\r\n  useEffect(() => {\r\n    ScrollRef.current.scrollTop = ScrollRef.current.scrollHeight;\r\n  }, [circles]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {imageViewer && (\r\n        <ImageViewer image={imageViewer} callback={() => set(null)} />\r\n      )}\r\n      <Scrollable ref={ScrollRef}>\r\n        {\r\n          circles.map(d => (\r\n            <Circle\r\n              key = {d.id}\r\n              circle={d.circle}\r\n              creater={d.userNickname}\r\n              time={d.create_at}\r\n              avatar={d.avatar}\r\n              image={d.image}\r\n              onClick={() => set(d.image)}\r\n            />\r\n        ))}\r\n      </Scrollable>\r\n      <ButtonWrapper>\r\n      <Button onClick={handleButtonClick}>Post my moments!</Button>\r\n      </ButtonWrapper>\r\n      {newCircle && <CircleAdd socket={socket} setActiveList={setActiveList} user={user} resetButton={setNewcircle}/>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CircleShow;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosClose } from \"react-icons/io\";\r\nimport { ERROR } from \"../../redux/actions\";\r\nimport Avatar from \"../Common/Avatar\";\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  align-items: center;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  background-color: ${props =>\r\n    props.bgColor ? \"rgba(211, 47, 47, 1)\" : \"rgb(245, 245, 245)\"};\r\n  padding: 0.5rem 1rem;\r\n  min-width: 280px;\r\n  margin: 0.25rem;\r\n`;\r\n\r\nconst DismissBtn = styled.span`\r\n  padding: 0.25rem;\r\n  border-radius: 50%;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  margin-right: -0.5rem;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n  &:active {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst Message = styled.span`\r\n  font-size: 0.75rem;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  line-height: 1.43;\r\n  letter-spacing: 0.01071em;\r\n  padding: 0.5rem 0rem;\r\n`;\r\n\r\nconst CloseBtn = styled(IoIosClose)`\r\n  font-size: 1.85rem;\r\n  color: rgba(0, 0, 0, 0.87);\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst Snackbar = ({\r\n  uuid,\r\n  type,\r\n  message,\r\n  dismiss,\r\n  avatar = null,\r\n  sender = null\r\n}) => {\r\n  useEffect(() => {\r\n    //如果不是错误类的消息提示，设置显示时间3s\r\n    if (type !== ERROR) {\r\n      setTimeout(() => dismiss(uuid), 5000);\r\n    }\r\n  }, [dismiss, type, uuid]);\r\n  return (\r\n    <Wrapper bgColor={type === ERROR}>\r\n      {avatar && <StyledAvatar image={avatar} userNickname={sender} />}\r\n      <Message>{message}</Message>\r\n      <DismissBtn onClick={() => dismiss(uuid)}>\r\n        <CloseBtn size=\"1em\" />\r\n      </DismissBtn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Snackbar from \"./Snackbar\";\r\nimport { DISMISS_NOTIFICATION } from \"../../redux/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 1rem;\r\n  max-height: calc(100vh - 1rem);\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst SnackbarContainer = ({ socket }) => {\r\n  const notifications = useSelector(\r\n    state => state.rootReducer.user.notifications\r\n  );\r\n\r\n  const dismiss = id => socket.emit(DISMISS_NOTIFICATION, id);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {notifications.map(\r\n        d =>\r\n          !d.dismissed && (\r\n            <Snackbar\r\n              type={d.type}\r\n              key={d.id}\r\n              uuid={d.id}\r\n              message={d.message}\r\n              dismiss={dismiss}\r\n              avatar={d.avatar}\r\n              sender={d.sender}\r\n            />\r\n          )\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SnackbarContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../redux/actions\";\r\nimport Avatar from \"./Common/Avatar\";\r\nimport Button from \"./Common/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  max-width: 150px;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.right}px;\r\n  background: ${props => props.theme.background};\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  width: 100%;\r\n  z-index: 2;\r\n  transition: ${props => props.theme.transition};\r\n  & > button {\r\n    font-size: 0.7rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst UserNickname = styled.div`\r\n  font-size: 0.85rem;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 500;\r\n  color: ${props => props.theme.backgroundColor};\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst AccountPopup = ({ top, right, avatar, username, userNickname,setActiveList }) => {\r\n  // set the event function\r\n    const dispatch = useDispatch();\r\n  const logoutFunc = async () => {\r\n    const resp = await fetch(\"/api/logout\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"include\"\r\n    });\r\n    if (resp.status === 200) {\r\n      dispatch(logout());\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper top={top} right={right}>\r\n      <Avatar image={avatar} size=\"32px\" />\r\n      <UserNickname>{userNickname}</UserNickname>\r\n      <Button onClick={logoutFunc}>Logout</Button>\r\n      <Button onClick={() => setActiveList(\"settings\")}>Settings</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AccountPopup;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Lists from \"../components/Lists/ListContainer\";\r\nimport Messages from \"../components/Messages/MessagesContainer\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Settings from \"../components/Settings\";\r\nimport CircleShow from \"../components/Circles/CircleContainer\";\r\nimport SnackbarContainer from \"../components/Snackbar/SnackbarContainer\";\r\nimport AccountPopup from \"../components/AccountPopup\";\r\nimport { SET_NIGHT_MODE } from \"../redux/actions\";\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 64px auto 1fr;\r\n  grid-template-rows: 1fr;\r\n  grid-template-areas: \"nav lists messages\";\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: #f7f7f7;\r\n`;\r\n\r\n\r\nconst Home = ({ socket, nightModeState }) => {\r\n  // 获得当前的user\r\n  const user = useSelector(state => state.rootReducer.user);\r\n  // set the ListState 初始活动界面停留在chats\r\n  const [listState, setListState] = useState({ active: \"chats\", open: false });\r\n  // set the accountState 初始账户页面是未打开状态\r\n  const [accountOverview, setAccountViewChange] = useState({ open: false, top: 0, right: 0 });\r\n\r\n  // handle the click on the Navbar icon\r\n  // 点中icon 更改当前活动页面\r\n  const handleNavClick = e => {\r\n    if (e === listState.active) {\r\n      setListState({ ...listState, open: !listState.open });\r\n    } else {\r\n      setListState({ ...listState, open: true, active: e });\r\n    }\r\n    //! 调试语句\r\n    console.log(\"now list state:\",listState)\r\n  };\r\n\r\n  // handle the click on the Avatar\r\n  // 点击头像，显示账户信息\r\n  const handleNavAvatarClick = e => {\r\n    // 如果是开启就关上\r\n    if (accountOverview.open) {\r\n        setAccountViewChange({ ...accountOverview, open: false });\r\n    }\r\n    // 如果是关闭就打开\r\n    else {\r\n      let rect = e.currentTarget.getBoundingClientRect();\r\n      setAccountViewChange({\r\n        open: true,\r\n        right: rect.right + rect.height / 3,\r\n        top: rect.top + rect.width / 2\r\n      });\r\n    }\r\n  };\r\n\r\n  // handle the click on the Day/Night mode change\r\n  const dispatch = useDispatch();\r\n  const handleModeChange = () => dispatch({ type: SET_NIGHT_MODE });\r\n  // 点击？？？\r\n  const handleListChange = e => setListState({ ...listState, active: e });\r\n\r\n  // the view with listening the state change\r\n  return (\r\n    socket && (\r\n\r\n        <Wrapper>\r\n          {accountOverview.open && (\r\n            //界面中的账户信息\r\n            <AccountPopup\r\n              socket={socket}\r\n              top={accountOverview.top}\r\n              right={accountOverview.right}\r\n              avatar={user.avatar}\r\n              username={user.username}\r\n              userNickname={user.userNickname}\r\n              setActiveList={handleListChange}\r\n            />\r\n          )}\r\n          {/* 这是侧边栏 */}\r\n          <Navbar\r\n            socket={socket}\r\n            avatar={user.avatar}\r\n            activeList={listState.active}\r\n            setActiveList={handleNavClick}\r\n            setPos={handleNavAvatarClick}\r\n            setNightModeState={handleModeChange}\r\n            nightModeState={nightModeState}\r\n          />\r\n          {/* 这是侧边显示单个条目的地方 */}\r\n          {listState.active !== \"circles\" && <Lists\r\n            socket={socket}\r\n            open={listState.open}\r\n            activeList={listState.active}\r\n            setActiveList={handleListChange}\r\n          />}\r\n          {/* 这是聊天界面 */}\r\n          {listState.active !== \"circles\" && <Messages socket={socket} />}\r\n          {/* 这是朋友圈*/}\r\n          {listState.active === \"circles\" && <CircleShow socket={socket} setActiveList={handleListChange} />}\r\n          {/* 这是侧右上角的新消息提示框 */}\r\n          <SnackbarContainer socket={socket} />\r\n          {/* 这是设置 */}\r\n          {listState.active === \"settings\" && (\r\n            <Settings\r\n              socket={socket}\r\n              visible_in_searches={user.visible_in_searches}\r\n              avatar={user.avatar}\r\n              setActiveList={handleListChange}\r\n            />\r\n          )}\r\n        </Wrapper>\r\n\r\n    )\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  LOAD_FRIENDS,\r\n  LOAD_CHATS,\r\n  LOAD_USERS,\r\n  LOAD_CIRCLES,\r\n  LOAD_NOTIFICATIONS,\r\n  ADD_MESSAGE_TO_CHAT,\r\n  ADD_CIRCLE,\r\n  ADD_FRIEND,\r\n  ADD_CHAT,\r\n  ADD_NOTIFICATION,\r\n  SET_FRIEND_ONLINE,\r\n  SET_FRIEND_OFFLINE,\r\n  DISMISS_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n  LOAD_ACTIVE_CHAT_MESSAGES,\r\n  ERROR,\r\n  ACCOUNT_UPDATE,\r\n  REAUTH,\r\n  logout,\r\n  loadChats,\r\n  loadFriends,\r\n  loadUsers,\r\n  loadNotifications,\r\n  addMessageToChat,\r\n  addFriend,\r\n  addCircle,\r\n  addNotification,\r\n  setFriendOnline,\r\n  setFriendOffline,\r\n  addChat,\r\n  setActiveChat,\r\n  dismissNotification,\r\n  deleteNotification,\r\n  loadMessages,\r\n  error,\r\n  updateAccount,\r\n  OVER,\r\n  checkover,\r\n  loadCircles\r\n} from \"../redux/actions\";\r\n\r\nconst useSocket = () => {\r\n  const loggedIn = useSelector(state => state.rootReducer.user.loggedIn);\r\n  const dispatch = useDispatch();\r\n  const socket = useRef(null);\r\n  const fake_url = \"http://127.0.0.1:5000/\"\r\n  const real_url = \"/\"\r\n  useEffect(() => {\r\n    console.log(\"add 1 time\")\r\n    // If user is logged in create socket connection and set up listeners.\r\n    if (loggedIn) {\r\n      socket.current = io.connect(fake_url);\r\n      console.log(\"socket.current\",socket.current)\r\n      socket.current.on(REAUTH, () => dispatch(logout()));\r\n      socket.current.on(LOAD_CHATS, e => dispatch(loadChats(e)));\r\n      socket.current.on(LOAD_FRIENDS, e => dispatch(loadFriends(e)));\r\n      socket.current.on(LOAD_CIRCLES, e => dispatch(loadCircles(e)));\r\n      socket.current.on(LOAD_USERS, e => dispatch(loadUsers(e)));\r\n      socket.current.on(LOAD_NOTIFICATIONS, e =>\r\n        dispatch(loadNotifications(e))\r\n      );\r\n      socket.current.on(LOAD_ACTIVE_CHAT_MESSAGES, e =>\r\n        dispatch(loadMessages(e))\r\n      );\r\n      socket.current.on(ADD_MESSAGE_TO_CHAT, e => {\r\n        dispatch(addMessageToChat(e));\r\n      });\r\n      socket.current.on(ADD_CIRCLE, e => dispatch(addCircle(e)));\r\n      socket.current.on(ADD_FRIEND, e => dispatch(addFriend(e)));\r\n      socket.current.on(ADD_CHAT, e => {\r\n        dispatch(addChat(e));\r\n        dispatch(\r\n          setActiveChat({\r\n            id: e.id,\r\n            recipient: e.recipient,\r\n            recipientId: e.recipientId,\r\n            avatar: e.avatar\r\n          })\r\n        );\r\n      });\r\n      socket.current.on(ADD_NOTIFICATION, e => dispatch(addNotification(e)));\r\n      socket.current.on(DISMISS_NOTIFICATION, e =>\r\n        dispatch(dismissNotification(e))\r\n      );\r\n      socket.current.on(DELETE_NOTIFICATION, e =>\r\n        dispatch(deleteNotification(e))\r\n      );\r\n      socket.current.on(SET_FRIEND_ONLINE, e => dispatch(setFriendOnline(e)));\r\n      socket.current.on(SET_FRIEND_OFFLINE, e => dispatch(setFriendOffline(e)));\r\n      socket.current.on(ERROR, e => dispatch(error(e)));\r\n      socket.current.on(ACCOUNT_UPDATE, e => dispatch(updateAccount(e)));\r\n    } else {\r\n      socket.current && socket.current.close();\r\n    }\r\n  }, [loggedIn, dispatch]);\r\n\r\n  return [socket, loggedIn];\r\n};\r\n\r\nexport default useSocket;\r\n","import React from \"react\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Home from \"./pages/Home\";\r\nimport useSocket from \"./hooks\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  #root {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  //the variable of connect with sever\r\n  const [socket, auth] = useSocket();\r\n  const nightModeState = useSelector(state => state.rootReducer.ui.mode);\r\n  const theme = {\r\n    background: nightModeState ? \"rgb(38,50,56)\" : \"rgb(255, 255, 255)\",\r\n    border: nightModeState\r\n      ? \"1px solid rgba(245,245,245,0.1)\"\r\n      : \"1px solid rgba(0,0,0,.1)\",\r\n    messageBackground: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.2)\"\r\n      : \"rgba(0, 0, 0, 0.075)\",\r\n    circleBackground: nightModeState\r\n      ? \"rgba(255, 255, 255)\"\r\n      : \"rgba(0, 0, 0, 0.075)\",\r\n    inputBackground: nightModeState ? \"#4a4a4a\" : \"rgba(0, 0, 0, 0.1)\",\r\n    elemBackground: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.2)\"\r\n      : \"rgba(245, 245, 245, 0.2)\",\r\n    elemBackgroundHover: nightModeState\r\n      ? \"rgba(245, 245, 245, .05)\"\r\n      : \"rgba(0, 0, 0, .05)\",\r\n    foregroundColor: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.8)\"\r\n      : \"rgba(0, 0, 0, 0.8)\",\r\n    backgroundColor: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.6)\"\r\n      : \"rgba(0, 0, 0, 0.6)\",\r\n    nightModeBtn: nightModeState ? \"#f0c420\" : \"rgba(0, 0, 0, 0.5)\",\r\n\r\n    buttonBackground: nightModeState ? \"rgba(245, 245, 245, 0.6)\" : \"rgba(0, 0, 0, 0.8)\",\r\n    buttonBorder: nightModeState ? \"1px solid rgba(245,245,245,0.1)\" : \"none\",\r\n    buttonText: \"rgba(245, 245, 245, 0.8)\",\r\n    transition: \"all .5s cubic-bezier(0.39, 0.575, 0.565, 1)\"\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      {!auth ? (\r\n        <Route exact path=\"/login\" component={Login} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n      {!auth ? (\r\n        <Route exact path=\"/register\" component={Register} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={() =>\r\n          auth ? <Home socket={socket.current} /> : <Redirect to=\"/login\" />\r\n        }\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  LOAD_CHATS,\r\n  LOAD_FRIENDS,\r\n  LOAD_USERS,\r\n  LOAD_CIRCLES,\r\n  ADD_FRIEND,\r\n  DELETE_FRIEND,\r\n  SET_FRIEND_OFFLINE,\r\n  SET_FRIEND_ONLINE,\r\n  LOAD_NOTIFICATIONS,\r\n  ADD_CHAT,\r\n  DISSOLVE_CHAT,\r\n  ADD_CIRCLE,\r\n  DELETE_CIRCLE,\r\n  ADD_MESSAGE_TO_CHAT,\r\n  ADD_NOTIFICATION,\r\n  DISMISS_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n  SET_ACTIVE_CHAT,\r\n  LOAD_ACTIVE_CHAT_MESSAGES,\r\n  ACCOUNT_UPDATE,\r\n  SET_NIGHT_MODE\r\n} from \"./actions\";\r\nconst initialState = {\r\n  friends: [],\r\n  chats: [],\r\n  circles: [],\r\n  accounts: [],\r\n  activeChat: {\r\n    id: null,\r\n    chat_name: null,\r\n    active: null,\r\n    recipientId: null,\r\n    messages: []\r\n  },\r\n  user: {\r\n    loggedIn: false,\r\n    id: null,\r\n    username: null,\r\n    userNickname: null,\r\n    avatar: null,\r\n    notifications: [],\r\n    visible_in_searches: false\r\n  },\r\n  ui: {\r\n    mode: false\r\n  },\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, loggedIn: true, ...action.payload }\r\n      };\r\n\r\n    case LOGOUT:\r\n      return initialState;\r\n\r\n    case SET_NIGHT_MODE:\r\n      return { ...state, ui: { mode: !state.ui.mode } };\r\n\r\n    case ACCOUNT_UPDATE:\r\n      return { ...state, user: { ...state.user, ...action.payload } };\r\n\r\n    case LOAD_FRIENDS:\r\n      return { ...state, friends: [...action.payload] };\r\n\r\n    case LOAD_CHATS:\r\n      return { ...state, chats: [...action.payload] };\r\n\r\n    case LOAD_USERS:\r\n      return { ...state, accounts: [...action.payload] };\r\n\r\n    case LOAD_CIRCLES:\r\n      return { ...state, circles: [...action.payload] };\r\n\r\n    case ADD_FRIEND:\r\n    case DELETE_FRIEND:\r\n        return { ...state, friends: friendsReducer(state.friends, action) };\r\n    \r\n    case ADD_CIRCLE:\r\n    case DELETE_CIRCLE:\r\n      return { ...state, circles: circlesReducer(state.circles, action)};\r\n\r\n    case ADD_CHAT:\r\n    case DISSOLVE_CHAT:\r\n    case ADD_MESSAGE_TO_CHAT:\r\n      return {\r\n        ...state,\r\n        chats: chatsReducer(state.chats, action),\r\n        activeChat: activeChatReducer(state.activeChat, action)\r\n      };\r\n\r\n    case SET_ACTIVE_CHAT:\r\n    case LOAD_ACTIVE_CHAT_MESSAGES:\r\n      return {\r\n        ...state,\r\n        activeChat: activeChatReducer(state.activeChat, action)\r\n      };\r\n\r\n    case SET_FRIEND_ONLINE:\r\n    case SET_FRIEND_OFFLINE:\r\n      return {\r\n        ...state,\r\n        friends: friendsReducer(state.friends, action),\r\n        chats: chatsReducer(state.chats, action)\r\n      };\r\n\r\n    case ADD_NOTIFICATION:\r\n    case LOAD_NOTIFICATIONS:\r\n    case DISMISS_NOTIFICATION:\r\n    case DELETE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          notifications: notificationsReducer(state.user.notifications, action)\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst notificationsReducer = (\r\n  state = initialState.user.notifications,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_NOTIFICATIONS:\r\n      return [...action.payload];\r\n    case ADD_NOTIFICATION:\r\n      return [...state, action.payload];\r\n    case DELETE_NOTIFICATION:\r\n      let j = state.findIndex(i => i.id === action.payload);\r\n      return [...state.slice(0, j), ...state.slice(j + 1)];\r\n    case DISMISS_NOTIFICATION:\r\n      let k = state.findIndex(i => i.id === action.payload);\r\n      return [\r\n        ...state.slice(0, k),\r\n        { ...state[k], dismissed: true },\r\n        ...state.slice(k + 1)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst friendsReducer = (state = initialState.friends, action) => {\r\n  switch (action.type) {\r\n    case ADD_FRIEND:\r\n      return [...state, action.payload];\r\n    //todo check here\r\n    case DELETE_FRIEND:\r\n        let j = state.findIndex(i => i.id === action.payload);\r\n        return [...state.slice(0, j), ...state.slice(j + 1)];\r\n    case SET_FRIEND_ONLINE:\r\n      return state.map(d =>\r\n        d.id === action.payload ? { ...d, active: true } : d\r\n      );\r\n    case SET_FRIEND_OFFLINE:\r\n      return state.map(d =>\r\n        d.id === action.payload ? { ...d, active: false } : d\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst chatsReducer = (state = initialState.chats, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHAT:\r\n      return [...state, action.payload];\r\n    case ADD_MESSAGE_TO_CHAT:\r\n      return state.map(d =>\r\n        d.id === action.payload.chatId\r\n          ? {\r\n              ...d,\r\n              last_message: action.payload.last_message,\r\n              last_message_timestamp: action.payload.last_message_timestamp\r\n            }\r\n          : d\r\n      );\r\n    case SET_FRIEND_ONLINE:\r\n      return state.map(d =>\r\n        d.recipientId === action.payload ? { ...d, active: true } : d\r\n      );\r\n    case SET_FRIEND_OFFLINE:\r\n      return state.map(d =>\r\n        d.recipientId === action.payload ? { ...d, active: false } : d\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst circlesReducer = (state = initialState.circles, action) => {\r\n    switch (action.type) {\r\n      case ADD_CIRCLE:\r\n        return [action.payload,...state ];\r\n      case DELETE_CIRCLE:\r\n            let j = state.findIndex(i => i.id === action.payload);\r\n            return [...state.slice(0, j), ...state.slice(j + 1)];\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nconst activeChatReducer = (state = initialState.activeChat, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE_TO_CHAT:\r\n      if (action.payload.chatId !== state.id) return state;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload.message]\r\n      };\r\n    case LOAD_ACTIVE_CHAT_MESSAGES:\r\n      return { ...state, messages: [...action.payload] };\r\n    case SET_ACTIVE_CHAT:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  rootReducer\r\n});\r\n","import { legacy_createStore as createStore,applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n// import localForage from \"localforage\";\r\nimport storageSession from 'redux-persist/lib/storage/session'\r\nimport localForage from \"localforage\";\r\nimport storage from 'redux-persist/lib/storage/index'\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport thunk from 'redux-thunk'\r\n//引入redux-devtools-extension\r\nimport{composeWithDevTools} from 'redux-devtools-extension'\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storageSession,\r\n  stateReconciler: autoMergeLevel2\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(persistedReducer,composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}